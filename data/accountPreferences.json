{"default":{"stop":false,"events":true,"forceLogin":true,"autoMarkRead":false,"online":true,"selfListen":true,"typingIndicator":false,"autoMarkDelivery":false,"maintenance":false,"tokens":{"gpt":{"prompt_tokens":4,"completion_tokens":4,"total_tokens":4},"davinci":{"prompt_tokens":0,"completion_tokens":0,"total_tokens":0},"dell":0},"owner":"0","openai":"","mirrorReaction":true,"autoReaction":true,"alert":true},"shared":{"delay":true,"frequency_penalty":"0","temperature":"0.5","max_tokens":"2048","presence_penalty":"0","probability_mass":"1","simultaneousExec":true,"text_complextion":"gpt-3.5-turbo-instruct","primary_text_complextion":"gpt-3.5-turbo-16k-0613","max_image":"6","cors":["https://mrepol742.github.io","http://0.0.0.0:8000"],"pin":{},"block_cmd":[],"mirrorReaction":true,"autoReaction":true,"alert":true},"function login(loginData, options, callback) {\n    if (utils.getType(options) === \"Function\" || utils.getType(options) === \"AsyncFunction\") {\n        callback = options;\n        options = {};\n    }\n\n    var globalOptions = {\n        selfListen: false,\n        listenEvents: false,\n        listenTyping: false,\n        updatePresence: false,\n        forceLogin: false,\n        autoMarkDelivery: true,\n        autoMarkRead: false,\n        autoReconnect: true,\n        online: true,\n        emitReady: false,\n        userAgent: \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/600.3.18 (KHTML, like Gecko) Version/8.0.3 Safari/600.3.18\",\n    };\n\n    setOptions(globalOptions, options);\n\n    var prCallback = null;\n    if (utils.getType(callback) !== \"Function\" && utils.getType(callback) !== \"AsyncFunction\") {\n        var rejectFunc = null;\n        var resolveFunc = null;\n        var returnPromise = new Promise(function (resolve, reject) {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n        prCallback = function (error, api) {\n            if (error) {\n                return rejectFunc(error);\n            }\n            return resolveFunc(api);\n        };\n        callback = prCallback;\n    }\n    loginHelper(loginData.appState, loginData.email, loginData.password, globalOptions, callback, prCallback);\n    return returnPromise;\n}":{"stop":false,"events":true,"forceLogin":true,"autoMarkRead":false,"online":true,"selfListen":true,"typingIndicator":false,"autoMarkDelivery":false,"maintenance":false,"tokens":{"gpt":{"prompt_tokens":4,"completion_tokens":4,"total_tokens":4},"davinci":{"prompt_tokens":0,"completion_tokens":0,"total_tokens":0},"dell":0},"owner":"0","openai":"","mirrorReaction":true,"autoReaction":true,"alert":true}}